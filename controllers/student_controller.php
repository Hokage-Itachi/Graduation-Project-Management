<?php
include_once("./controllers/base_controller.php");
include_once("./models/service/StudentService.php");
include_once("./models/service/BranchService.php");
include_once("./models/service/TeacherService.php");
include_once("./models/service/ProjectService.php");
include_once("./models/service/UserService.php");
include_once("./models/entity/Project.php");

class StudentController extends BaseController{
    private $studentService;
    private $teacherService;
    private $projectService;
    private $branchService;
    private $userService;
    private $data;

    public function __construct()
    {
        $this->file = "student_2_ui.php";
        $this->studentService = new StudentService();
        $this->teacherService = new TeacherService();
        $this->projectService = new ProjectService();
        $this->userService = new UserService();
        $this->branchService = new BranchService();
    }

    public function renderSignupPage($data){
        error_log($this->canSignUp());
        if($this->canSignUp()){
            $this->file = 'signup.php';
            $path = './views/'. $this->file;
            include_once($path);

        } else {
            header("location: /student");
        }
    }
    public function render($data)
    {
        if($this->canSignUp()){
            header("location: /student/signup");
        } else {
            parent::render($data); // TODO: Change the autogenerated stub
        }
    }

    function addProject(){
        if($_SERVER['REQUEST_METHOD'] == "POST"){
            $name = $_POST['name'];
            $teacher_email = $_POST['teacher'];
            $branch = $_POST['branch'];
            $user = $this->userService->findByEmail($teacher_email);
            $teacher = $this->teacherService->getByUserID($user->getUserId());
            error_log($teacher->getTeacherId());
            $student = $this->studentService->getByUserID($_SESSION['user']['id']);
            $result = $this->projectService->insert($name, '0', $branch, '0', 'Standard', '', $student->getRowId(), $teacher->getTeacherId());
//            error_log($result);
            header('location: /student');

        }
    }

    public function getBranchData(){
        $branches = $this->branchService->getAll();
        $branch_data = array();
        for($i = 0 ; $i< count($branches); $i++){
            $data = array(
                "name"=>$branches[$i]->getName(),
                "id"=>$branches[$i]->getId()
            );
            $branch_data[$i] = $data;
        }
        return $branch_data;
    }

    public function getTeacherData(){
        $teachers = $this->teacherService->getAll();
        $teacher_data = array();
        for ($i = 0; $i < count($teachers); $i++){
            $data = array(
                "name" => $teachers[$i]->getName(),
                'email'=>$teachers[$i]->getEmail()
            );
            $teacher_data[$i] = $data;

        }
        return $teacher_data;
    }

    public function getSignUpData(){
        $this->data['teachers'] = $this->getTeacherData();
        $this->data['branches'] = $this->getBranchData();
        return $this->data;
    }

    public function canSignUp(){
        $student = $this->studentService->getByUserID($_SESSION['user']['id']);
        $all_project = $this->projectService->getAll();
        foreach ($all_project as $project) {
            if(($project->getStudentId() == $student->getRowId()) && $project->getCompleted() == '0'){
                error_log($project->getProjectId());
                error_log($project->getCompleted());
                return false;
            }
        }
        return true;
    }


}